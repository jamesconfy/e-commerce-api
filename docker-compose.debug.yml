version: "3.9"

services:
  e-commerce-api:
    container_name: e-commerce
    image: everybody8/e-commerce:v1.0
    env_file:
      - docker.env
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 8080:8080
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - sql_net

  postgresdb:
    image: postgres:latest
    container_name: postgres_container
    env_file:
      - docker.env
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DBNAME}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - sql_net

  redisdb:
    image: redis:latest
    container_name: redis_container
    env_file:
      - docker.env
    ports:
      - 6379:6379
    volumes:
      - redis:/var/lib/redis/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_DATABASE_PASSWORD:?REDIS_DATABASE_PASSWORD variable is not set}"
    networks:
      - sql_net

# Networks to be created to facilitate communication between containers
networks:
  sql_net:

volumes:
  database:
  app:
  redis:
